name: Code checker

on:
  push:
  pull_request:

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    env:
      SRC_FOLDER: adax_local
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dlint flake8 flake8-bandit flake8-bugbear flake8-deprecated flake8-executable isort pylint black
          pip install -r requirements.txt

      - name: isort (PR only)
        uses: isort/isort-action@v1
        with:
          args: "--check-only --diff"
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository

      - name: black (PR only)
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        run: |
          black $SRC_FOLDER --check

      - name: Check for modified files (PR only)
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        id: git-check
        run: |
          echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT

      - name: Push changes (PR only)
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && steps.git-check.outputs.modified == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'Daniel Hoyer'
          git config --global user.email 'mail@dahoiv.net'
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}
          git checkout $GITHUB_HEAD_REF
          git commit -am "fixup! Format Python code with black and isort"
          git push

      - name: Flake8 Code Linter
        run: |
          flake8 $SRC_FOLDER --max-line-length=120 --extend-ignore=E203

      - name: isort
        run: |
          isort $SRC_FOLDER/**/*.py --check-only

      - name: Pylint Code Linter
        run: |
          pylint --disable=C,R --enable=unidiomatic-typecheck $SRC_FOLDER
